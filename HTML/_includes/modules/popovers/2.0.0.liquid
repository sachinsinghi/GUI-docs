{% comment %}
	--------------------------------------------------------------------------------------------------------------------------------------------------------------
	EXAMPLE FOR THIS MODULE WITH THE VISUAL EXAMPLE AND THE CODE TABS
	--------------------------------------------------------------------------------------------------------------------------------------------------------------
{% endcomment %}

{% comment %} TITLE {% endcomment %}
{% capture title %}
{% endcapture %}


{% comment %} DESCRIPTION {% endcomment %}
{% capture description %}
	Small overlays of content for housing secondary information. There are two popover options:<br><br>
	<strong>Toggle switch:</strong> Has a toggle function requiring the user to click on the original trigger to close the overlay. This allows
	multiple popovers to be open simultaneously.<br><br>
	<strong>Dismissible:</strong> Allows the user to click anywhere else on the screen to close the overlay. This allows only one popover to be open at time.
	<br><br>Logic has also been applied to ensure that the popover fits in the viewport on all devices.
</p>
<p class="example-description text-info">
	The buttons in this example are not included and will have to be added to the blend separately.
{% endcapture %}


{% comment %} WHAT'S NEW TAB FOR CHANGES COMPARED TO THE LAST VERSION {% endcomment %}
{% capture whatsnew %}
	<h4 class="body-font whatsnew-headline">What&rsquo;s new since v1.0.1</h4>

	This version changed:
		<code class="classes">CSS/LESS</code>
	but not:
		<code class="classes">HTML</code>,
		<code class="classes">JS</code>

	<ul class="lists">
		<li>
			To make it easier to switch brands with Less weâ€™ve added a brand variable. Building multibrand sites has never been this easy!
			(<a href="https://github.com/WestpacCXTeam/GUI-source/issues/203" target="_blank">#203</a>)
		</li>
	</ul>
{{ whatsnew }}{% endcapture %}


{% comment %} EXAMPLE HTML CODE IN THE BOX {% endcomment %}
{% assign example = "ex1" %}


{% comment %} HTML TAB {% endcomment %}
{% capture HTML %}
<div class="popover-wrapper js-popover-wrapper">
	<button class="btn popover js-popover">
		YOUR BUTTON TEXT
	</button>

	<div class="popover-popup js-popoverbody" aria-hidden="true" tabindex="-1" aria-label="Use the ESC key to close">
		<p class="popover-popup-title">
			YOUR POPOVER HEADLINE
		</p>
		<p class="popover-popup-body">
			YOUR POPOVER CONTENT
		</p>
	</div>
</div>
{% endcapture %}


{% comment %} CSS TAB {% endcomment %}
{% capture CSS %}
	Modifier class:

	<ul>
		<li>
			<code class="classes">popover-dismissible</code>
		</li>
	</ul>
{% endcapture %}


{% comment %} LESS TAB {% endcomment %}
{% capture LESS %}
	The main mixin is called: <code class="classes">_popovers({{ page.brand }})</code>
{% endcapture %}


{% comment %} JS TAB {% endcomment %}
{% capture JS %}
	This module comes with the usual init method:

	<ul>
		<li>
			<code class="classes">GUI.popovers.init();</code> after the page has been loaded.
		</li>
		<li>
			<code class="classes">GUI.popovers.render();</code> for dynamically added elements after page load.
		</li>
	</ul>
{% endcapture %}


{% include showExample.liquid  controls = false %}
{% comment %}
	--------------------------------------------------------------------------------------------------------------------------------------------------------------
{% endcomment %}